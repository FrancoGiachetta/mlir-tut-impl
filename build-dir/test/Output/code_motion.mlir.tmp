module {
  func.func @test_loop_invariant_code_motion() -> !poly.poly<10> {
    %cst = arith.constant dense<[1, 2, 3]> : tensor<3xi32>
    %0 = poly.from_tensor %cst : tensor<3xi32> -> <10>
    %cst_0 = arith.constant dense<[9, 8, 16]> : tensor<3xi32>
    %1 = poly.from_tensor %cst_0 : tensor<3xi32> -> <10>
    %2 = poly.mul %0, %1 : (!poly.poly<10>, !poly.poly<10>) -> !poly.poly<10>
    %3 = affine.for %arg0 = 0 to 100 iter_args(%arg1 = %0) -> (!poly.poly<10>) {
      %4 = poly.add %arg1, %2 : (!poly.poly<10>, !poly.poly<10>) -> !poly.poly<10>
      affine.yield %4 : !poly.poly<10>
    }
    return %3 : !poly.poly<10>
  }
}

